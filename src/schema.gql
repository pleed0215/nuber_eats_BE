# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Float!
  createAt: DateTime!
  updatedAt: DateTime!
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean
  restaurants: [Restaurant!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum UserRole {
  Client
  Owner
  Delivery
}

type Category {
  id: Float!
  createAt: DateTime!
  updatedAt: DateTime!
  name: String!
  slug: String!
  image: String!
  restaurants: [Restaurant!]
  restaurantsOn: CategoryDetailOutput!
}

type DishOption {
  name: String!
  choices: [String!]
  extra: Float!
}

type Dish {
  id: Float!
  createAt: DateTime!
  updatedAt: DateTime!
  name: String!
  price: Float!
  photo: String
  description: String!
  restaurant: Restaurant!
  options: [DishOption!]
}

type Restaurant {
  id: Float!
  createAt: DateTime!
  updatedAt: DateTime!
  name: String!
  coverImage: String!
  address: String!
  category: Category
  owner: User!
  dishes: [Dish!]
}

type CreateRestaurantOutput {
  error: String
  ok: Boolean!
  data: Restaurant
}

type UpdateRestaurantOutput {
  error: String
  ok: Boolean!
}

type DeleteRestaurantOutput {
  error: String
  ok: Boolean!
}

type CategoryDetailOutput {
  count: Int
  restaurants: [Restaurant!]
}

type AllCategoriesOutput {
  error: String
  ok: Boolean!
  count: Int
  categories: [Category!]
}

type CategoryOutput {
  error: String
  ok: Boolean!
  totalPages: Int
  currentPage: Int
  countTotalItems: Int
  category: Category
  restaurants: [Restaurant!]
}

type RestaurantsOutput {
  error: String
  ok: Boolean!
  totalPages: Int
  currentPage: Int
  countTotalItems: Int
  restaurants: [Restaurant!]
}

type RestaurantDetailOutput {
  error: String
  ok: Boolean!
  restaurant: Restaurant
}

type SearchRestaurantOutput {
  error: String
  ok: Boolean!
  totalPages: Int
  currentPage: Int
  countTotalItems: Int
  restaurants: [Restaurant!]
}

type CreateDishOutput {
  error: String
  ok: Boolean!
}

type CreateUserOutput {
  error: String
  ok: Boolean!
  data: User
}

type LoginOutput {
  error: String
  ok: Boolean!
  token: String
}

type UpdateProfileOutput {
  error: String
  ok: Boolean!
  updated: User
}

type UserProfileOutput {
  error: String
  ok: Boolean!
  user: User
}

type VerificationOutput {
  error: String
  ok: Boolean!
}

type Query {
  allRestaurants(page: Float!): RestaurantsOutput!
  restaurant(id: Float!): RestaurantDetailOutput!
  searchRestaurantByName(search: SearchRestaurantInput!): SearchRestaurantOutput!
  category(slug: String!, page: Int = 1): CategoryOutput!
  allCategories: AllCategoriesOutput!
  me: User
  userProfile(userId: Float!): UserProfileOutput!
}

input SearchRestaurantInput {
  page: Int = 1
  query: String!
}

type Mutation {
  createRestaurant(input: CreateRestaurantInput!): CreateRestaurantOutput!
  updateRestaurant(input: UpdateRestaurantInput!): UpdateRestaurantOutput!
  deleteRestaurant(id: Float!): DeleteRestaurantOutput!
  createDish(input: CreateDishInput!): CreateDishOutput!
  createUser(input: CreateUserInput!): CreateUserOutput!
  login(email: String!, password: String!): LoginOutput!
  updateProfile(update: UpdateProfileInput!): UpdateProfileOutput!
  updatePassword(password: String!): LoginOutput!
  verifyCode(code: String!): VerificationOutput!
}

input CreateRestaurantInput {
  name: String!
  coverImage: String!
  address: String!
  categoryName: String = null
}

input UpdateRestaurantInput {
  name: String
  coverImage: String
  address: String
  categoryName: String
  id: Float!
}

input CreateDishInput {
  name: String!
  price: Float!
  description: String!
  options: [DishOptionType!]
  restaurantId: Int!
}

input DishOptionType {
  name: String!
  choices: [String!]
  extra: Float!
}

input CreateUserInput {
  email: String!
  password: String!
  role: UserRole!
}

input UpdateProfileInput {
  createAt: DateTime
  updatedAt: DateTime
  email: String
  role: UserRole
  verified: Boolean
  restaurants: [RestaurantInputType!]
}

input RestaurantInputType {
  name: String!
  coverImage: String!
  address: String!
  category: CategoryInputType
  owner: UserInputType!
  dishes: [DishInputType!]
}

input CategoryInputType {
  name: String!
  slug: String!
  image: String!
  restaurants: [RestaurantInputType!]
}

input UserInputType {
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean
  restaurants: [RestaurantInputType!]!
}

input DishInputType {
  name: String!
  price: Float!
  photo: String
  description: String!
  restaurant: RestaurantInputType!
  options: [DishOptionType!]
}
